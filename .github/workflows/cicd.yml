name: CICD
on:
  push:
    branches:
      - master
  pull_request: {}

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ SECRETS.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "eu-west-1"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.x'
          channel: 'stable'
          cache: true
      - name: Using Flutter Version
        run: flutter --version
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Build Release
        run: flutter build web --release
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: alwanReleaseBuildArtifact
          path: build/web

  deploy-infra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:6.0
    #    if: github.ref == 'refs/heads/master'
    #    needs: build
    outputs:
      bucketArn: ${{ steps.bucketArnPrint.outputs.bucketArn }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Update apt-get
        run: apt-get -y update
      - name: Setup CDK
        run: apt-get install -y nodejs && apt-get install -y npm && npm install -g aws-cdk
      - name: Setup JQ
        run: apt-get install -y jq
      - name: Deploy Infrastructure
        run: cdk deploy --require-approval never --outputs-file cdk.out/outputs.json
        working-directory: Alwan.Infra
      - run: "cat cdk.out/outputs.json"
      - run: "echo \"Reminder: add CNAME record with value $(jq \".[].edge-distribute-endpoint\" cdk.out/outputs.json)\""
      - id: bucketArnPrint
        run: "echo '::setOutputs name=bucketArn::$(jq \".[].bucket-arn\" cdk.out/outputs.json)'"

  deploy-alwan:
    name: Deploy Alwan
    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/master'
    needs: deploy-infra
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: alwanReleaseBuildArtifact
          path: build/web
      - run: ls
      - run: echo ${{ needs.deploy-infra.outputs.bucketArn }}
      - name: Deploy Alwan
        run: echo "Hello World"
